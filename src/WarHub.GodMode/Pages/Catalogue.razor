@page "/"
@page "/catalogue"
@using WarHub.GodMode.Data
@using WarHub.ArmouryModel.ProjectModel
@inject NavigationManager NavigationManager
@inject DatafilesService DatafilesService
@inject IJSRuntime JSRuntime

<div>
    <DatafileList @bind-DatafileName="DatafileName"></DatafileList>

</div>

@if (DatafileInfo is null)
{
    <p>No file selected</p>
}
else
{
    <CascadingValue Value="this">
        <div class="row">
            <div class="col-md" style="max-height:80vh; overflow: auto;">
                <h4 id="content">Content</h4>
                <div>
                    <SourceNodeTreeItem Node="@Root" />
                </div>
            </div>

            <div class="col-md">
                <h4 id="details">Details</h4>
                <SourceNodeDetails Node="@ActiveNode" />
            </div>
        </div>
    </CascadingValue>
}

@code {
    private string _datafileName;
    private SourceNode activeNode;

    [Parameter]
    public string DatafileName
    {
        get => _datafileName;
        set
        {
            var old = _datafileName;
            _datafileName = value;
            if (value != old)
            {
                UpdateDatafile();
            }
        }
    }

    public SourceNode ActiveNode
    {
        get => activeNode;
        set
        {
            activeNode = value;
            StateHasChanged();
        }
    }

    public IDatafileInfo<SourceNode> DatafileInfo { get; set; }

    public SourceNode Root { get; set; }

    void UpdateDatafile()
    {
        if (!string.IsNullOrWhiteSpace(DatafileName))
        {
            DatafileInfo = DatafilesService.GetDatafileInfo(DatafileName);
            Root = DatafileInfo.GetData();
            if (Root?.Contains(ActiveNode) != true)
            {
                ActiveNode = Root;
            }
        }
    }

    public ValueTask SelectNode(SourceNodeTreeItem treeItem)
    {
        ActiveNode = treeItem.Node;
        return JSRuntime.Focus(treeItem.NodeSpan);
    }
}

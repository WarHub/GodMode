@if (Node is { })
{
    <table class="table">
        <tr>
            <td>Kind</td>
            <td>
                <code>@Node.Kind.ToString()</code>
            </td>
        </tr>
        @foreach (var (name, value) in GetProperties(Node))
        {
            <tr>
                <td>@name</td>
                <td>
                    <code>@(value?.ToString() ?? "<null>")</code>
                </td>
            </tr>
        }
    </table>
}

@code {
    [Parameter]
    public SourceNode Node { get; set; }

    IEnumerable<(string name, object value)> GetProperties(SourceNode node)
    {
        if (node is IIdentifiableNode id)
            yield return ("Id", id.Id);
        if (node is INameableNode named)
            yield return ("Name", named.Name);
        if (node is IPublicationReferencingNode pub)
        {
            yield return ("PubId", pub.PublicationId);
            yield return ("PubPage", pub.Page);
        }
        if (node is IRootNode root)
            yield return ("BattleScribe version", root.BattleScribeVersion);
        if (node is EntryBaseNode entryBase)
            yield return ("Hidden", entryBase.IsHidden);
        if (node is SelectionEntryBaseNode selBase)
        {
            yield return ("Collective", selBase.Collective);
            yield return ("Import", selBase.Import);
        }
        if (node is SelectionEntryNode entry)
            yield return ("Type", entry.Type);
        if (node is SelectionEntryGroupNode seg)
            yield return ("Default", seg.DefaultSelectionEntryId);
        if (node is CatalogueBaseNode catBase)
        {
            yield return ("Revision", catBase.Revision);
            yield return ("Author Name", catBase.AuthorName);
            yield return ("Author Contact", catBase.AuthorContact);
            yield return ("Author Url", catBase.AuthorUrl);
        }
        if (node is CatalogueNode cat)
        {
            yield return ("Is Library", cat.IsLibrary);
            yield return ("Gamesystem Id", cat.GamesystemId);
            yield return ("Gamesystem Revision", cat.GamesystemRevision);
        }
        if (node is CatalogueLinkNode catLink)
        {
            yield return ("Target Id", catLink.TargetId);
            yield return ("Type", catLink.Type);
            yield return ("Import Root Entries", catLink.ImportRootEntries);
        }
        if (node is CategoryNode category)
            yield return ("Is Primary", category.IsPrimary);
        if (node is CategoryLinkNode categoryLink)
        {
            yield return ("Target Id", categoryLink.TargetId);
            yield return ("Is Primary", categoryLink.IsPrimary);
        }
        if (node is CharacteristicNode ch)
        {
            yield return ("Type Id", ch.TypeId);
            yield return ("Value", ch.Value);
        }
        if (node is CostBaseNode cost)
        {
            yield return ("Type Id", cost.TypeId);
            yield return ("Value", cost.Value);
        }
        if (node is CostTypeNode costType)
            yield return ("Default Cost Limit", costType.DefaultCostLimit);
        if (node is EntryLinkNode entryLink)
        {
            yield return ("Target Id", entryLink.TargetId);
            yield return ("Type", entryLink.Type);
        }
    }
}

@using WarHub.ArmouryModel.Source
@using WarHub.GodMode.Data

@inherits SourceNodeTreeItemBase

<div class="d-flex align-items-center">
    @if (HasChildren)
    {
        <a class="badge badge-light" role="button" @onclick="ToggleExpand">
            <span class="small oi @ExpandButtonIcon"></span>
        </a>
    }
    else
    {
        <span class="badge badge-light">
            <span class="small oi oi-ellipses"></span>
        </span>
    }
    <label class="flex-shrink-1 text-truncate mb-0 ml-1 @(Active ? "border border-primary" : "")"
           title="@Model.Title"
           style="min-width: 0; border: 1px solid transparent; user-select: none"
           tabindex="@(Active ? 0 : -1)"
           @ref="FocusableElementRef"
           @onclick="SelectNode"
           @ondblclick="ToggleExpand"
           @onkeydown="OnKeyDown"
           @onkeydown:preventDefault>
        <span class="position-relative">
            <span class="oi oi-@Model.Icon text-center" style="min-width: 1em"></span>
            @if (Model.IconMod is { })
            {
                <span class="oi oi-@Model.IconMod position-absolute p-1"
                      style="top: auto; bottom: -.5em; right: -.3em; transform: scale(0.5); border-radius: .3em; background-color: rgba(255, 255, 255, .8);"></span>
            }
        </span>
        @Model.Title
    </label>
    @if (HasChildren)
    {
        <span class="badge badge-secondary ml-1">
            @ChildItems.Length
        </span>
    }
</div>

@if (HasChildren && Expanded)
{
    <div class="ml-2 pl-2" style="border-left: 1px dotted grey;">
        @{
            var query = Model.GetChildrenGroups()
                .Select(x => (startIndex: 0, group: x))
                .Scan((sum, item) => (startIndex: sum.startIndex + sum.group.models.Length, item.group));
        }
        @foreach (var (startIndex, @group) in query)
        {
            if (Model.ShowChildrenGroupNames)
            {
                <small class="pl-3">@group.name</small>
            }
            <ul class="list-unstyled">
                @foreach (var (index, child) in group.models.Index(startIndex))
                {
                    <li>
                        <SourceNodeTreeItem Model="@child" ParentItem="@this" IndexInParent="@index" />
                    </li>
                }
            </ul>
        }
    </div>
}

@code {
    string ExpandButtonIcon => Expanded ? "oi-minus" : "oi-plus";

    bool Active => Tree.ActiveItem == this;
}

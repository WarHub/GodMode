@using WarHub.ArmouryModel.ProjectModel
@using WarHub.GodMode.Data
@inject DatafilesService FilesService

<label for="file-select">Select datafile</label>

<EditForm Model="this">
    <InputSelect id="file-select" @bind-Value="SelectedFilepath">
        @{
            RenderFragment<IDatafileInfo> option = file =>
                @<option value="@file.Filepath">@file.GetStorageName()</option>;
        }
        <optgroup label="Game systems">
            @foreach (var file in FilesService.Datafiles.Where(x => x.DataKind == SourceKind.Gamesystem))
            {
                @option(file)
            }
        </optgroup>
        @foreach (var file in FilesService.Datafiles.Where(x => x.DataKind == SourceKind.Catalogue))
        {
            var name = file.GetStorageName();
            <option value="@file.Filepath">
                @name
            </option>
        }
    </InputSelect>
</EditForm>

@code {
    private IDatafileInfo selectedDatafile;

    private ImmutableArray<IDatafileInfo> Datafiles => FilesService.Datafiles;

    private IEnumerable<IDatafileInfo> Catalogues => Datafiles.Where(x => x.DataKind == SourceKind.Catalogue);

    private IEnumerable<IDatafileInfo> Gamesystems => Datafiles.Where(x => x.DataKind == SourceKind.Gamesystem);

    private string SelectedFilepath
    {
        get => SelectedDatafile?.Filepath;
        set => SelectedDatafile = FilesService.Datafiles.FirstOrDefault(x => x.Filepath == value);
    }

    [Parameter]
    public IDatafileInfo SelectedDatafile
    {
        get => selectedDatafile;
        set
        {
            var changed = value != selectedDatafile;
            selectedDatafile = value;
            if (changed)
                SelectedDatafileChanged.InvokeAsync(value);
        }
    }

    [Parameter]
    public EventCallback<IDatafileInfo> SelectedDatafileChanged { get; set; }

    protected override void OnInitialized()
    {
        SelectedDatafile = Catalogues.FirstOrDefault() ?? Gamesystems.FirstOrDefault();
    }
}
